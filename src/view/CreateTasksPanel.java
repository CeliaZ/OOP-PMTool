/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import entity.Messages;
import entity.Projects;
import entity.Tasks;
import entity.Users;
import java.sql.Date;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;
import javax.persistence.TypedQuery;
import javax.swing.JTabbedPane;
import services.ApplicationController;

/**
 *
 * @author Cherry
 */
public class CreateTasksPanel extends javax.swing.JPanel {
    //private TasksController tasksController;
    /**
     * Creates new form CreateTasksPanel
     */
    
    private Tasks task;
    
    public CreateTasksPanel() {
        initComponents();
        initDataComponents();
    }
    
    private void initDataComponents() {
        EntityManager em = ApplicationController.getEnitityManager();
        TypedQuery<Users> query = em.createNamedQuery("Users.findAll", Users.class);
        List<Users> result = query.getResultList();
        for (Users u : result) {
            comboOwner.addItem(u);
        }
        TypedQuery<Tasks> queryTasks = (TypedQuery<Tasks>) em.createNamedQuery("Tasks.findByProjectId");
        Integer proId = ApplicationController.getCurrentProject().getId();
        List<Tasks> tasks = queryTasks.setParameter("projectId", proId).getResultList();
        for (Tasks t : tasks) {
            comboTasks.addItem(t);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textTaskName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textDescription = new javax.swing.JTextArea();
        comboTasks = new javax.swing.JComboBox();
        jTextField4 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        buttonSave = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        comboOwner = new javax.swing.JComboBox<Users>();
        buttonCancel = new javax.swing.JButton();

        setLayout(null);

        jLabel1.setText("Task Name:");
        add(jLabel1);
        jLabel1.setBounds(28, 45, 93, 32);

        jLabel2.setText("Task Owner:");
        add(jLabel2);
        jLabel2.setBounds(28, 215, 93, 27);

        jLabel3.setText("Task Dependency:");
        add(jLabel3);
        jLabel3.setBounds(28, 272, 115, 16);

        jLabel5.setText("Finished Time:");
        add(jLabel5);
        jLabel5.setBounds(28, 365, 92, 16);

        jLabel6.setText("Description");
        add(jLabel6);
        jLabel6.setBounds(28, 89, 73, 16);

        textTaskName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTaskNameActionPerformed(evt);
            }
        });
        add(textTaskName);
        textTaskName.setBounds(180, 47, 244, 28);

        textDescription.setColumns(20);
        textDescription.setRows(5);
        jScrollPane1.setViewportView(textDescription);

        add(jScrollPane1);
        jScrollPane1.setBounds(180, 81, 244, 84);

        comboTasks.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No dependency" }));
        comboTasks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTasksActionPerformed(evt);
            }
        });
        add(comboTasks);
        comboTasks.setBounds(172, 272, 180, 27);
        add(jTextField4);
        jTextField4.setBounds(205, 359, 75, 28);

        jLabel8.setText("Day");
        add(jLabel8);
        jLabel8.setBounds(175, 365, 24, 16);

        jLabel9.setText("Month");
        add(jLabel9);
        jLabel9.setBounds(286, 365, 40, 16);
        add(jTextField5);
        jTextField5.setBounds(332, 359, 81, 28);

        jLabel10.setText("Year");
        add(jLabel10);
        jLabel10.setBounds(419, 365, 27, 16);
        add(jTextField6);
        jTextField6.setBounds(452, 359, 91, 28);

        buttonSave.setText("Save");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });
        add(buttonSave);
        buttonSave.setBounds(340, 430, 75, 29);

        jLabel11.setText("Start Time:");
        add(jLabel11);
        jLabel11.setBounds(28, 323, 68, 16);

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        add(jTextField7);
        jTextField7.setBounds(205, 311, 75, 28);
        add(jTextField8);
        jTextField8.setBounds(332, 311, 81, 28);
        add(jTextField9);
        jTextField9.setBounds(452, 311, 91, 28);

        jLabel12.setText("Day");
        add(jLabel12);
        jLabel12.setBounds(175, 317, 24, 16);

        jLabel13.setText("Month");
        add(jLabel13);
        jLabel13.setBounds(286, 317, 40, 16);

        jLabel14.setText("Year");
        add(jLabel14);
        jLabel14.setBounds(419, 317, 27, 16);

        add(comboOwner);
        comboOwner.setBounds(172, 216, 180, 27);

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });
        add(buttonCancel);
        buttonCancel.setBounds(210, 430, 75, 29);
    }// </editor-fold>//GEN-END:initComponents

    private void textTaskNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTaskNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textTaskNameActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed

        String[] array = new String[4];
        array[0] = textTaskName.getText();
        array[1] = textDescription.getText();
        
        EntityTransaction transaction = ApplicationController.getEnitityManager().getTransaction();

        EntityManager em = ApplicationController.getEnitityManager();
//        System.out.println(em);
        //TypedQuery<Projects> queryProById = (TypedQuery<Projects>) em.createNamedQuery("Projects.findById");
        TypedQuery<Projects> queryProById = (TypedQuery<Projects>) em.createNamedQuery("Projects.findById");
        //Query queryProById = em.createNamedQuery("findById");
        Integer proId = ApplicationController.getCurrentProject().getId();
        Projects project1 = queryProById.setParameter("id", proId).getSingleResult();
        
        Date st = null;
        Date et = null;
        
        if (jTextField9.getText().length() > 0) {
            StringBuilder sb = new StringBuilder();
            sb.append(jTextField9.getText());
            sb.append("-");
            sb.append(jTextField8.getText());
            sb.append("-");
            sb.append(jTextField7.getText());
            st = Date.valueOf(sb.toString());
        }
        
        if (jTextField6.getText().length() > 0) {
            StringBuilder sb2 = new StringBuilder();
            sb2.append(jTextField6.getText());
            sb2.append("-");
            sb2.append(jTextField5.getText());
            sb2.append("-");
            sb2.append(jTextField4.getText());
            et = Date.valueOf(sb2.toString());
        }

        Users owner = (Users) comboOwner.getSelectedItem();
        Tasks task = new Tasks(array[0], array[1], owner.getId(), st, et);
        project1.getTasks().add(task);
        task.setProjectId(project1.getId());
        task.setProject(project1);
        task.setCreatedAt(new java.util.Date());
        if (comboTasks.getSelectedItem() instanceof Tasks) {
            task.setDependency(((Tasks) comboTasks.getSelectedItem()).getId());
        }
        transaction.begin();
        ApplicationController.getEnitityManager().persist(task);
        transaction.commit();

        Messages message = new Messages();
        message.setSenderId(14); // TODO change to user id
        message.setProjectId(proId);
        message.setTaskId(task.getId());
        message.setContent("created this task.");
        message.setCreatedAt(new java.util.Date());
        transaction.begin();
        ApplicationController.getEnitityManager().persist(message);
        transaction.commit();
       
//emf.close();
        MainAppFrame jf = ApplicationController.getMainFrame();

        //JPanel newP = new ProjectTaskPanel();
        ProjectMainPanel newP = new ProjectMainPanel();
        JTabbedPane tp = newP.getJTabbedPane();
        tp.setSelectedIndex(1);// go to task panel

        jf.switchPanel(newP);
        
//        remove(firstPanel);
//        add(secondPanel);
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void comboTasksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTasksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTasksActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        MainAppFrame jf = ApplicationController.getMainFrame();
        ProjectMainPanel newP = new ProjectMainPanel();
        JTabbedPane tp = newP.getJTabbedPane();
        tp.setSelectedIndex(1);// go to task panel
        jf.switchPanel(newP);
    }//GEN-LAST:event_buttonCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonSave;
    private javax.swing.JComboBox<Users> comboOwner;
    private javax.swing.JComboBox comboTasks;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextArea textDescription;
    private javax.swing.JTextField textTaskName;
    // End of variables declaration//GEN-END:variables
}


//class DataManager {
//    private static EntityManager entityManager;
//    
//    public static void init() {
//        EntityManagerFactory emf = Persistence.createEntityManagerFactory("PMToolPU");
//        entityManager = emf.createEntityManager();
//    }
//    
//    public static EntityManager getEnitityManager() {
//        return entityManager;
//    }
//}